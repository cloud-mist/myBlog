<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 忆の風</title>
    <link>https://shawncheung.com/post/</link>
    <description>Recent content in Posts on 忆の風</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>shawn</copyright>
    <lastBuildDate>Fri, 22 Oct 2021 13:06:18 +0800</lastBuildDate><atom:link href="https://shawncheung.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang | 算法题的输入输出</title>
      <link>https://shawncheung.com/post/go-algio/</link>
      <pubDate>Fri, 22 Oct 2021 13:06:18 +0800</pubDate>
      
      <guid>https://shawncheung.com/post/go-algio/</guid>
      <description>「前言」  本篇分享介绍3个版本，层层递进 接下来以 Acwing796.子矩阵的和 为例  「题目」  题目：输入一个 $n$ 行 $m$ 列的整数矩阵，再输入 $q$ 个询问，每个询问包含四个整数 $x_1,y_1,x_2,y_2$，表示一个子矩阵的左上角坐标和右下角坐标。对于每个询问输出子矩阵中所有数的和。 输入：第一行包含三个整数 $n，m，q$。 接下来 $n$ 行，每行包含 $m$ 个整数，表示整数矩阵。 接下来 $q$ 行，每行包含四个整数 $x_1,y_1,x_2,y_2$，表示一组询问。
输出：共 $q$ 行，每行输出一个询问的结果。   「Ver. 1」 Use&amp;amp;Result  fmt.Scan() 和 fmt.Print()系列 Res：TLE  Code   package main import ( &amp;#34;fmt&amp;#34; ) const N = 1010 func main() { var n, m, q int fmt.Scan(&amp;amp;n, &amp;amp;m, &amp;amp;q) a := make([][N]int, N) for i := 1; i &amp;lt;= n; i++ { for j := 1; j &amp;lt;= m; j++ { fmt.</description>
    </item>
    
    <item>
      <title>LCL&amp;SSB | 「基础shell命令」</title>
      <link>https://shawncheung.com/post/note-lclssb-1/</link>
      <pubDate>Fri, 03 Sep 2021 15:33:34 +0800</pubDate>
      
      <guid>https://shawncheung.com/post/note-lclssb-1/</guid>
      <description>「帮助文档」  命令有很多，有时需要看一些资料，借助这三个命令。
 man info -help  「目录」 1. cd &amp;amp; pwd .:表示当前目录
..:表示当前目录的父目录
   命令 说明     pwd 显示当前目录   cd /home/cloudmist/Documents 用绝对路径   cd Documents 用相对路径   cd ../Downloads 跳转到和docunments同级的目录    2. ls    命令 说明     ls 显示当前目录下的文件和目录（按列按字母排序）   ls -F 用一些标记标记不同类的文件，例如在可执行文件后面加*,在目录后面加/等   ls -a 显示隐藏文件和非隐藏文件   ls -FR R递归显示   ls -l 显示每个文件的相关信息    3.</description>
    </item>
    
    <item>
      <title>Acg | 0x03</title>
      <link>https://shawncheung.com/post/acg-0x03/</link>
      <pubDate>Fri, 23 Jul 2021 18:32:02 +0800</pubDate>
      
      <guid>https://shawncheung.com/post/acg-0x03/</guid>
      <description>壹、介绍  前缀和：$O(1)$求某个区间或区域的和 差分 ：$O(1)$为某个连续区间或区域加一个固定的值  贰、模板 「一维前缀和」  Analyse   求一段区间的和 $$sum(l,r) = b[r]-b[l-1]$$   code
# input, 0位置存储0,从1开始存数 n,m=map(int, input().split()) a=[0] a.extend(list(map(int, input().split()))) b=[0]*(n+1) # 前缀和 for i in range(1,n+1): b[i] = b[i-1]+a[i] # output  while m: m-=1 l,r=map(int, input().split()) print(b[r]-b[l-1]) ``
  「二维前缀和」  Analyse    code # input n,m,q=map(int,input().split()) a=[[0 for i in range(m+1)] for j in range(n+1)] b=[[0 for i in range(m+1)] for j in range(n+1)] for i in range(1,n+1): temp=list(map(int, input().</description>
    </item>
    
    <item>
      <title>Acg | 0x04</title>
      <link>https://shawncheung.com/post/acg-0x04/</link>
      <pubDate>Thu, 22 Jul 2021 14:54:11 +0800</pubDate>
      
      <guid>https://shawncheung.com/post/acg-0x04/</guid>
      <description>一、整数二分 Explain  将模板分为二种情况,循环以l=r结束 看第一段，若$a[mid]&amp;gt;=x$,因为是单增序列，推出mid后面的数会更大，所以缩小区间为左半段,又mid也可能是答案，因此r=mid 为什么采用右移运算，而不是除法。右移是向下取整，整除是向零取整，在值域包含负数的时候后者没法正常工作。  Code   在单增序列a中查找$\geq{x}$中最小的那个
while l&amp;lt;r: mid=l+r&amp;gt;&amp;gt;1 if a[mid]&amp;gt;=x: r=mid else: l=mid+1   在a中找$\leq{x}$中最大的那个
while l&amp;lt;r: mid=l+r+1&amp;gt;&amp;gt;1 if a[mid]&amp;lt;=x: l=mid else: r=mid-1   Problems E1 数的范围
 topic   给定一个按照升序排列的长度为 n 的整数数组,以及q个查询。对于每个查询，返回一个元素 k 的起始位置和终止位置（位置从 0 开始计数）。如果数组中不存在该元素，则返回 -1 -1.  analyse   先用模板找起始位置，即最小的那个。 如果s[l]!=x,说明没找到，输出-1 -1即可， 否则，输出起始，再用模板找终止位置即可。  code n,q=map(int, input().split()) s=list(map(int, input().split())) while q: q-=1 x=int(input()) l,r=0,n-1 while l&amp;lt;r: mid =l+r&amp;gt;&amp;gt;1 if s[mid]&amp;gt;=x: r=mid else: l=mid+1 if s[l]!</description>
    </item>
    
    <item>
      <title>Cube | PLL</title>
      <link>https://shawncheung.com/post/cube-pll/</link>
      <pubDate>Thu, 24 Jun 2021 19:50:57 +0800</pubDate>
      
      <guid>https://shawncheung.com/post/cube-pll/</guid>
      <description>PLL  记录一下我所使用和即将使用的pll
1. Alg    Name Case Alg PB     Ua  RU&amp;rsquo;RU(RURU&amp;rsquo;R&amp;rsquo;U&amp;rsquo;R&#39;2) 1.42s   Ub  L&amp;rsquo;UL&amp;rsquo;U&#39;(L&amp;rsquo;U&amp;rsquo;L&amp;rsquo;ULUL&#39;2) 1.28s   Aa  RUR&amp;rsquo;F&amp;rsquo;rUR&amp;rsquo;U&amp;rsquo;r&amp;rsquo;FR2U&amp;rsquo;R&#39; 1.27s   Ab  (L&amp;rsquo;U&amp;rsquo;LF)(r&amp;rsquo;U&amp;rsquo;LU)rF&amp;rsquo;L2&amp;rsquo;UL 2.03s   H  M&#39;2U&#39; M&#39;2U&#39;2 M&#39;2U&#39; M&#39;2 1.21s   Z  M&amp;rsquo;U&#39;(M2U&#39;)2 M&amp;rsquo;U2M2 1.78s               Na  (RF) (U&amp;rsquo;R&amp;rsquo;URU) F&amp;rsquo;R2&amp;rsquo;F&amp;rsquo;RURU&amp;rsquo;R&amp;rsquo;F 2.</description>
    </item>
    
    <item>
      <title>Blog搭建的那点小事</title>
      <link>https://shawncheung.com/post/blog-hugoanddiary/</link>
      <pubDate>Tue, 04 May 2021 21:00:00 +0000</pubDate>
      
      <guid>https://shawncheung.com/post/blog-hugoanddiary/</guid>
      <description>一、相识  原来是在Hexo平台，折腾Next主题,过了一段时间发现那并不是我想要的。
首先,hexo有点慢这是实话，所以早换晚换肯定要换，那就搜搜看，结果便找到了Hugo,由Golang开发而成,速度很快。 Okay,平台有了，那还得有个主题不是，找啊找找啊找，发现了Even，用了一段时间，还是觉得不太美观，但已经相当美观，而且功能很全，已经接近了我想要的东西。 于是乎，便又在Github上翻，发现了目前的主题Diary,界面已经很棒，功能还有待补全。
只得一声叹息，为什么我不会前端，why，也许最适合自己的是自己造一个。可惜不会，还不学，那有啥子办法呢？等时机成熟，等我学，便是一个新的主题的诞生。
诶，这主题换了不少，结果定睛一看,好家伙,博文几乎为0,这&amp;hellip;🤣
二、安装  Hugo: 官方文档zh版 照链接安装即可。哈？那这篇文章存在的意义在哪里 Diary: 说明文档  三、简易配置 前期工作  把主题exampleSite文件夹里的config.toml copy到博客根目录 把archetypes里的default.md放到博客那个文件夹 照说明文档把config.toml改一下  About页  config.toml添加以下内容 [[menu.main]] url = &amp;#34;/about/index.html&amp;#34; name = &amp;#34;關於&amp;#34; weight = 4 # 位置摆放  在content文件夹下创建about.md即可  插入图片   先需要修改config.toml,在[markup]下添加以下内容(记得缩进)
[markup.goldmark] [markup.goldmark.renderer] hardWraps = false unsafe = true xHTML = true   使用的&amp;lt;img src=&amp;quot;&amp;quot; width= /&amp;gt;配合&amp;lt;center&amp;gt;;图片文件夹放置在static下。
为什么不使用shortcode,主要是没搞懂;
为什么不使用markdown语法，因为没法定义大小
  博客中间宽度  位置：diary/assets/scss/journal.scss 内容：本来两边都是25%，调整两边的百分比就可以了 $side-container-width: 21%; $extra-container-width: 21%;   主题有待完善  tags页面  目前情况：一个标签占一行。很浪费，不美观，翻阅点击很费劲。 希望改变：多个标签一行,如果有多篇文章提了这个标签，就让此标签变大加重。   图片浏览  目前情况：点击不了，没法放大，只图片浏览。 希望改变：加入可以点击浏览所有图片的功能。   代码  copy按钮，折叠功能   目录  没有一级标题不显示(强制展开，就不能折叠) 不会 自动折叠/展开 子标题    四、总结  总之，至少主题风格很对口味，可惜一些需求没有实现,但任何东西本身就没有完美之说,不是吗。</description>
    </item>
    
    <item>
      <title>2021年的第一次开箱-kindle</title>
      <link>https://shawncheung.com/post/ob-kindle/</link>
      <pubDate>Fri, 01 Jan 2021 14:30:58 +0000</pubDate>
      
      <guid>https://shawncheung.com/post/ob-kindle/</guid>
      <description>&amp;quot; 我并没有什么方法,只是对于一件事情很长时间很热心地去考虑罢了。&amp;quot; ——牛顿
 前言  其实在很久很久以前，就想要用kindle来看书，只是迫于种种原因而迟迟未动。例如这些：
 它只是个看书的产品，没有其他额外的功能，我为什么不买个ipad呢; 它刷新的时候，还要闪几下，就很烦; 它操作起来和老年机一样慢，不能忍受; 它有点小贵，我为什么不把那几百块钱吃点好的呢。   我现在再次看来，也许这些都不是问题。我们追求的是什么东西？不过是纯粹的阅读体验罢了，多余的功能那才是多余吧。
开箱 看官请   Fig1. 包装
 Fig2. 还是包装🤣
 Fig3. 本体
 Fig4. 全家福
 感想  拿到手中的那一刻，感觉好小啊，确实很小巧。背壳的手感是真的好，摸上去十分的舒服，整体很圆润。
虽然屏幕小了些，但是拿到手里很方便，190多g, 不至于手很难受。观感也挺舒服的，背光灯也是有的。还有防水啥的，这个我可不会边洗澡边它看书,来测试它的防水性。就像你买一台iphone,他说有多牛的防水，结果如果你是去测防水中它gg了，Apple这个伟大的公司可是不会给你免费维修的。
希望它能陪伴我，徜徉于书海之中。最近，知识的读书没少，但是精神的读书和人生的思考却逐渐少了。好了，此刻就让我再次捡起它吧。2021,你好呀！</description>
    </item>
    
  </channel>
</rss>
